
package assignment1;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.Scanner;
import javax.swing.JOptionPane;

public class Assignment1 {
    final static double inch_const = 2.54;
    final static double feet_const = 0.3048;
    
    public static void main(String[] args){
        String user_choice;
        int choice = 0;
        Scanner sc = new Scanner(System.in);
        do {
            user_choice = JOptionPane.showInputDialog("Please select which option you"
                    + "would like:\n1. Convert from centimetres to inch\n2. Convert "
                    + "from metres to feet\n3. Exit program");
                        
            choice = Integer.parseInt(user_choice);
            
            if(choice == 1){                                          
                String conv = JOptionPane.showInputDialog("Input the value in centimetres:"); 
                double cm = Double.parseDouble(conv);
                double output = cm / inch_const;
                JOptionPane.showMessageDialog(null, conv+" centimetres is "
                        +round(output,2)+" inches");
            } else if(choice == 2){
                String conv = JOptionPane.showInputDialog("Input the value in metres: ");
                double m = Double.parseDouble(conv);
                double output = m / feet_const;
                JOptionPane.showMessageDialog(null, conv+" metres is "+round(output,2)+" feet");
            } else if(choice == 3){
                JOptionPane.showMessageDialog(null, "This system will close");
                System.exit(0);
            }  else {
                JOptionPane.showMessageDialog(null, "Invalid input! Try again.");
            }
        } while (choice != 3);
    }
    
    public static double round(double value, int places) {
        if (places < 0) 
            throw new IllegalArgumentException();
        BigDecimal bd = new BigDecimal(value);
        bd = bd.setScale(places, RoundingMode.HALF_UP);
        return bd.doubleValue();
    }  
}
